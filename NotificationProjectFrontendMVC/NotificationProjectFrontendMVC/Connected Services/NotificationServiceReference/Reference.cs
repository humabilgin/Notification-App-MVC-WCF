//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NotificationProjectFrontendMVC.NotificationServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Announcement", Namespace="http://schemas.datacontract.org/2004/07/NotificationProjectBackendWCF")]
    [System.SerializableAttribute()]
    public partial class Announcement : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BodyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastUpdateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short SeverityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Body {
            get {
                return this.BodyField;
            }
            set {
                if ((object.ReferenceEquals(this.BodyField, value) != true)) {
                    this.BodyField = value;
                    this.RaisePropertyChanged("Body");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastUpdateDate {
            get {
                return this.LastUpdateDateField;
            }
            set {
                if ((this.LastUpdateDateField.Equals(value) != true)) {
                    this.LastUpdateDateField = value;
                    this.RaisePropertyChanged("LastUpdateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Severity {
            get {
                return this.SeverityField;
            }
            set {
                if ((this.SeverityField.Equals(value) != true)) {
                    this.SeverityField = value;
                    this.RaisePropertyChanged("Severity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="NotificationServiceReference.INotificationService")]
    public interface INotificationService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INotificationService/InsertAnnouncement", ReplyAction="http://tempuri.org/INotificationService/InsertAnnouncementResponse")]
        bool InsertAnnouncement(NotificationProjectFrontendMVC.NotificationServiceReference.Announcement obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INotificationService/InsertAnnouncement", ReplyAction="http://tempuri.org/INotificationService/InsertAnnouncementResponse")]
        System.Threading.Tasks.Task<bool> InsertAnnouncementAsync(NotificationProjectFrontendMVC.NotificationServiceReference.Announcement obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INotificationService/ListAnnouncement", ReplyAction="http://tempuri.org/INotificationService/ListAnnouncementResponse")]
        NotificationProjectFrontendMVC.NotificationServiceReference.Announcement[] ListAnnouncement();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INotificationService/ListAnnouncement", ReplyAction="http://tempuri.org/INotificationService/ListAnnouncementResponse")]
        System.Threading.Tasks.Task<NotificationProjectFrontendMVC.NotificationServiceReference.Announcement[]> ListAnnouncementAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INotificationService/DeleteAnnouncement", ReplyAction="http://tempuri.org/INotificationService/DeleteAnnouncementResponse")]
        bool DeleteAnnouncement(int Cid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INotificationService/DeleteAnnouncement", ReplyAction="http://tempuri.org/INotificationService/DeleteAnnouncementResponse")]
        System.Threading.Tasks.Task<bool> DeleteAnnouncementAsync(int Cid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INotificationService/UpdateAnnouncement", ReplyAction="http://tempuri.org/INotificationService/UpdateAnnouncementResponse")]
        bool UpdateAnnouncement(NotificationProjectFrontendMVC.NotificationServiceReference.Announcement obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INotificationService/UpdateAnnouncement", ReplyAction="http://tempuri.org/INotificationService/UpdateAnnouncementResponse")]
        System.Threading.Tasks.Task<bool> UpdateAnnouncementAsync(NotificationProjectFrontendMVC.NotificationServiceReference.Announcement obj);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface INotificationServiceChannel : NotificationProjectFrontendMVC.NotificationServiceReference.INotificationService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class NotificationServiceClient : System.ServiceModel.ClientBase<NotificationProjectFrontendMVC.NotificationServiceReference.INotificationService>, NotificationProjectFrontendMVC.NotificationServiceReference.INotificationService {
        
        public NotificationServiceClient() {
        }
        
        public NotificationServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public NotificationServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NotificationServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NotificationServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool InsertAnnouncement(NotificationProjectFrontendMVC.NotificationServiceReference.Announcement obj) {
            return base.Channel.InsertAnnouncement(obj);
        }
        
        public System.Threading.Tasks.Task<bool> InsertAnnouncementAsync(NotificationProjectFrontendMVC.NotificationServiceReference.Announcement obj) {
            return base.Channel.InsertAnnouncementAsync(obj);
        }
        
        public NotificationProjectFrontendMVC.NotificationServiceReference.Announcement[] ListAnnouncement() {
            return base.Channel.ListAnnouncement();
        }
        
        public System.Threading.Tasks.Task<NotificationProjectFrontendMVC.NotificationServiceReference.Announcement[]> ListAnnouncementAsync() {
            return base.Channel.ListAnnouncementAsync();
        }
        
        public bool DeleteAnnouncement(int Cid) {
            return base.Channel.DeleteAnnouncement(Cid);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteAnnouncementAsync(int Cid) {
            return base.Channel.DeleteAnnouncementAsync(Cid);
        }
        
        public bool UpdateAnnouncement(NotificationProjectFrontendMVC.NotificationServiceReference.Announcement obj) {
            return base.Channel.UpdateAnnouncement(obj);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateAnnouncementAsync(NotificationProjectFrontendMVC.NotificationServiceReference.Announcement obj) {
            return base.Channel.UpdateAnnouncementAsync(obj);
        }
    }
}
